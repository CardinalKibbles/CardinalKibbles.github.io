{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RollUpdater = void 0;\nfunction updateRoll(particle, delta) {\n  var roll = particle.options.roll;\n  var speed = particle.rollSpeed * delta.factor;\n  var max = 2 * Math.PI;\n  if (!roll.enable) {\n    return;\n  }\n  particle.rollAngle += speed;\n  if (particle.rollAngle > max) {\n    particle.rollAngle -= max;\n  }\n}\nvar RollUpdater = /*#__PURE__*/function () {\n  function RollUpdater() {\n    _classCallCheck(this, RollUpdater);\n  }\n  _createClass(RollUpdater, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var rotate = particle.options.rotate;\n      var rotateAnimation = rotate.animation;\n      return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n      updateRoll(particle, delta);\n    }\n  }]);\n  return RollUpdater;\n}();\nexports.RollUpdater = RollUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","RollUpdater","updateRoll","particle","delta","roll","options","speed","rollSpeed","factor","max","Math","PI","enable","rollAngle","rotate","rotateAnimation","animation","destroyed","spawning","path","isEnabled"],"sources":["C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/tsparticles/Updaters/Roll/RollUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RollUpdater = void 0;\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    const speed = particle.rollSpeed * delta.factor;\n    const max = 2 * Math.PI;\n    if (!roll.enable) {\n        return;\n    }\n    particle.rollAngle += speed;\n    if (particle.rollAngle > max) {\n        particle.rollAngle -= max;\n    }\n}\nclass RollUpdater {\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        const rotateAnimation = rotate.animation;\n        return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\nexports.RollUpdater = RollUpdater;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AACbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAC5B,SAASC,UAAU,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACjC,IAAMC,IAAI,GAAGF,QAAQ,CAACG,OAAO,CAACD,IAAI;EAClC,IAAME,KAAK,GAAGJ,QAAQ,CAACK,SAAS,GAAGJ,KAAK,CAACK,MAAM;EAC/C,IAAMC,GAAG,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE;EACvB,IAAI,CAACP,IAAI,CAACQ,MAAM,EAAE;IACd;EACJ;EACAV,QAAQ,CAACW,SAAS,IAAIP,KAAK;EAC3B,IAAIJ,QAAQ,CAACW,SAAS,GAAGJ,GAAG,EAAE;IAC1BP,QAAQ,CAACW,SAAS,IAAIJ,GAAG;EAC7B;AACJ;AAAC,IACKT,WAAW;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACb,mBAAUE,QAAQ,EAAE;MAChB,IAAMY,MAAM,GAAGZ,QAAQ,CAACG,OAAO,CAACS,MAAM;MACtC,IAAMC,eAAe,GAAGD,MAAM,CAACE,SAAS;MACxC,OAAO,CAACd,QAAQ,CAACe,SAAS,IAAI,CAACf,QAAQ,CAACgB,QAAQ,IAAI,CAACJ,MAAM,CAACK,IAAI,IAAIJ,eAAe,CAACH,MAAM;IAC9F;EAAC;IAAA;IAAA,OACD,gBAAOV,QAAQ,EAAEC,KAAK,EAAE;MACpB,IAAI,CAAC,IAAI,CAACiB,SAAS,CAAClB,QAAQ,CAAC,EAAE;QAC3B;MACJ;MACAD,UAAU,CAACC,QAAQ,EAAEC,KAAK,CAAC;IAC/B;EAAC;EAAA;AAAA;AAELL,OAAO,CAACE,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script"}