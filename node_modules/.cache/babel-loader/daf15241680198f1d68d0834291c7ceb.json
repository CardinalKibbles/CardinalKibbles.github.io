{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Utils_2 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass Canvas {\n  constructor(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n  init() {\n    this.resize();\n    this.initStyle();\n    this.initCover();\n    this.initTrail();\n    this.initBackground();\n    this.paint();\n  }\n  loadCanvas(canvas, generatedCanvas) {\n    var _a;\n    if (!canvas.className) {\n      canvas.className = Utils_1.Constants.canvasClass;\n    }\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = Utils_1.deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  }\n  destroy() {\n    var _a;\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    this.draw(ctx => {\n      Utils_2.clear(ctx, this.size);\n    });\n  }\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        Utils_2.clear(ctx, this.size);\n        this.paintBase(Utils_1.getStyleFromRgb(this.coverColor, this.coverColor.a));\n      } else {\n        this.paintBase();\n      }\n    });\n  }\n  clear() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(Utils_1.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else {\n      this.draw(ctx => {\n        Utils_2.clear(ctx, this.size);\n      });\n    }\n  }\n  windowResize() {\n    if (!this.element) {\n      return;\n    }\n    const container = this.container;\n    this.resize();\n    container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n    container.particles.setDensity();\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n  }\n  resize() {\n    if (!this.element) {\n      return;\n    }\n    const container = this.container;\n    const pxRatio = container.retina.pixelRatio;\n    const size = container.canvas.size;\n    const oldSize = {\n      width: size.width,\n      height: size.height\n    };\n    size.width = this.element.offsetWidth * pxRatio;\n    size.height = this.element.offsetHeight * pxRatio;\n    this.element.width = size.width;\n    this.element.height = size.height;\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n  drawConnectLine(p1, p2) {\n    this.draw(ctx => {\n      var _a;\n      const lineStyle = this.lineStyle(p1, p2);\n      if (!lineStyle) {\n        return;\n      }\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      Utils_1.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    });\n  }\n  drawGrabLine(particle, lineColor, opacity, mousePos) {\n    const container = this.container;\n    this.draw(ctx => {\n      var _a;\n      const beginPos = particle.getPosition();\n      Utils_1.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    });\n  }\n  drawParticle(particle, delta) {\n    var _a, _b, _c;\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n    const pfColor = particle.getFillColor();\n    const psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n    if (!pfColor && !psColor) {\n      return;\n    }\n    let [fColor, sColor] = this.getPluginParticleColors(particle);\n    const pOptions = particle.options;\n    const twinkle = pOptions.twinkle.particles;\n    const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n    if (!fColor || !sColor) {\n      const twinkleRgb = Utils_1.colorToHsl(twinkle.color);\n      if (!fColor) {\n        fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n      }\n      if (!sColor) {\n        sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n      }\n    }\n    const options = this.container.actualOptions;\n    const zIndexOptions = particle.options.zIndex;\n    const zOpacityFactor = 1 - zIndexOptions.opacityRate * particle.zIndexFactor;\n    const radius = particle.getRadius();\n    const opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n    const strokeOpacity = (_c = particle.stroke.opacity) !== null && _c !== void 0 ? _c : opacity;\n    const zOpacity = opacity * zOpacityFactor;\n    const fillColorValue = fColor ? Utils_1.getStyleFromHsl(fColor, zOpacity) : undefined;\n    if (!fillColorValue && !sColor) {\n      return;\n    }\n    const orbitOptions = particle.options.orbit;\n    this.draw(ctx => {\n      const zSizeFactor = 1 - zIndexOptions.sizeRate * particle.zIndexFactor;\n      const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      const strokeColorValue = sColor ? Utils_1.getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n      if (radius <= 0) {\n        return;\n      }\n      if (orbitOptions.enable) {\n        this.drawOrbit(particle, Enums_1.OrbitType.back);\n      }\n      Utils_1.drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n      if (orbitOptions.enable) {\n        this.drawOrbit(particle, Enums_1.OrbitType.front);\n      }\n    });\n  }\n  drawOrbit(particle, type) {\n    const container = this.container;\n    const orbitOptions = particle.options.orbit;\n    let start;\n    let end;\n    if (type === Enums_1.OrbitType.back) {\n      start = Math.PI / 2;\n      end = Math.PI * 3 / 2;\n    } else if (type === Enums_1.OrbitType.front) {\n      start = Math.PI * 3 / 2;\n      end = Math.PI / 2;\n    } else {\n      start = 0;\n      end = 2 * Math.PI;\n    }\n    this.draw(ctx => {\n      var _a, _b, _c, _d;\n      Utils_1.drawEllipse(ctx, particle, (_a = particle.orbitColor) !== null && _a !== void 0 ? _a : particle.getFillColor(), (_c = (_b = particle.orbitRadius) !== null && _b !== void 0 ? _b : container.retina.orbitRadius) !== null && _c !== void 0 ? _c : particle.getRadius(), orbitOptions.opacity, orbitOptions.width, ((_d = particle.orbitRotation) !== null && _d !== void 0 ? _d : 0) * container.retina.pixelRatio, start, end);\n    });\n  }\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => {\n      Utils_1.drawPlugin(ctx, plugin, delta);\n    });\n  }\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => {\n      Utils_1.drawParticlePlugin(ctx, plugin, particle, delta);\n    });\n  }\n  initBackground() {\n    const options = this.container.actualOptions;\n    const background = options.background;\n    const element = this.element;\n    const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n    if (!elementStyle) {\n      return;\n    }\n    if (background.color) {\n      const color = Utils_1.colorToRgb(background.color);\n      elementStyle.backgroundColor = color ? Utils_1.getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n  draw(cb) {\n    if (!this.context) {\n      return;\n    }\n    return cb(this.context);\n  }\n  initCover() {\n    const options = this.container.actualOptions;\n    const cover = options.backgroundMask.cover;\n    const color = cover.color;\n    const coverRgb = Utils_1.colorToRgb(color);\n    if (coverRgb) {\n      this.coverColor = {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      };\n    }\n  }\n  initTrail() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n    const fillColor = Utils_1.colorToRgb(trail.fillColor);\n    if (fillColor) {\n      const trail = options.particles.move.trail;\n      this.trailFillColor = {\n        r: fillColor.r,\n        g: fillColor.g,\n        b: fillColor.b,\n        a: 1 / trail.length\n      };\n    }\n  }\n  getPluginParticleColors(particle) {\n    let fColor;\n    let sColor;\n    for (const [, plugin] of this.container.plugins) {\n      if (!fColor && plugin.particleFillColor) {\n        fColor = Utils_1.colorToHsl(plugin.particleFillColor(particle));\n      }\n      if (!sColor && plugin.particleStrokeColor) {\n        sColor = Utils_1.colorToHsl(plugin.particleStrokeColor(particle));\n      }\n      if (fColor && sColor) {\n        break;\n      }\n    }\n    return [fColor, sColor];\n  }\n  initStyle() {\n    const element = this.element,\n      options = this.container.actualOptions;\n    if (!element) {\n      return;\n    }\n    const originalStyle = this.originalStyle;\n    if (options.fullScreen.enable) {\n      this.originalStyle = Utils_1.deepExtend({}, element.style);\n      element.style.position = \"fixed\";\n      element.style.zIndex = options.fullScreen.zIndex.toString(10);\n      element.style.top = \"0\";\n      element.style.left = \"0\";\n      element.style.width = \"100%\";\n      element.style.height = \"100%\";\n    } else if (originalStyle) {\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n  }\n  paintBase(baseColor) {\n    this.draw(ctx => {\n      Utils_1.paintBase(ctx, this.size, baseColor);\n    });\n  }\n  lineStyle(p1, p2) {\n    return this.draw(ctx => {\n      const options = this.container.actualOptions;\n      const connectOptions = options.interactivity.modes.connect;\n      return Utils_1.gradient(ctx, p1, p2, connectOptions.links.opacity);\n    });\n  }\n}\nexports.Canvas = Canvas;","map":{"version":3,"names":["Object","defineProperty","exports","value","Canvas","Utils_1","require","Utils_2","Enums_1","constructor","container","size","height","width","context","generatedCanvas","init","resize","initStyle","initCover","initTrail","initBackground","paint","loadCanvas","canvas","_a","className","Constants","canvasClass","element","remove","originalStyle","deepExtend","style","offsetHeight","offsetWidth","getContext","retina","destroy","draw","ctx","clear","options","actualOptions","backgroundMask","enable","cover","coverColor","paintBase","getStyleFromRgb","a","trail","particles","move","length","trailFillColor","windowResize","setResponsive","pixelRatio","setDensity","plugin","plugins","undefined","pxRatio","oldSize","started","resizeFactor","drawConnectLine","p1","p2","lineStyle","pos1","getPosition","pos2","linksWidth","drawGrabLine","particle","lineColor","opacity","mousePos","beginPos","drawParticle","delta","_b","_c","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","fColor","sColor","getPluginParticleColors","pOptions","twinkle","twinkling","Math","random","frequency","twinkleRgb","colorToHsl","color","zIndexOptions","zIndex","zOpacityFactor","opacityRate","zIndexFactor","radius","getRadius","bubble","strokeOpacity","stroke","zOpacity","fillColorValue","getStyleFromHsl","orbitOptions","orbit","zSizeFactor","sizeRate","zStrokeOpacity","strokeColorValue","drawOrbit","OrbitType","back","composite","shadow","front","type","start","end","PI","_d","drawEllipse","orbitColor","orbitRadius","orbitRotation","drawPlugin","drawParticlePlugin","background","elementStyle","colorToRgb","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","cb","coverRgb","r","g","b","fillColor","particleFillColor","particleStrokeColor","fullScreen","toString","top","left","baseColor","connectOptions","interactivity","modes","connect","gradient","links"],"sources":["C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/tsparticles/Core/Canvas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Utils_2 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = Utils_1.deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            Utils_2.clear(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                Utils_2.clear(ctx, this.size);\n                this.paintBase(Utils_1.getStyleFromRgb(this.coverColor, this.coverColor.a));\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                Utils_2.clear(ctx, this.size);\n            });\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        this.resize();\n        container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.draw((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            Utils_1.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.draw((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            Utils_1.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n        if (!fColor || !sColor) {\n            const twinkleRgb = Utils_1.colorToHsl(twinkle.color);\n            if (!fColor) {\n                fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions;\n        const zIndexOptions = particle.options.zIndex;\n        const zOpacityFactor = 1 - zIndexOptions.opacityRate * particle.zIndexFactor;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n        const strokeOpacity = (_c = particle.stroke.opacity) !== null && _c !== void 0 ? _c : opacity;\n        const zOpacity = opacity * zOpacityFactor;\n        const fillColorValue = fColor ? Utils_1.getStyleFromHsl(fColor, zOpacity) : undefined;\n        if (!fillColorValue && !sColor) {\n            return;\n        }\n        const orbitOptions = particle.options.orbit;\n        this.draw((ctx) => {\n            const zSizeFactor = 1 - zIndexOptions.sizeRate * particle.zIndexFactor;\n            const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n            const strokeColorValue = sColor ? Utils_1.getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n            if (radius <= 0) {\n                return;\n            }\n            if (orbitOptions.enable) {\n                this.drawOrbit(particle, Enums_1.OrbitType.back);\n            }\n            Utils_1.drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            if (orbitOptions.enable) {\n                this.drawOrbit(particle, Enums_1.OrbitType.front);\n            }\n        });\n    }\n    drawOrbit(particle, type) {\n        const container = this.container;\n        const orbitOptions = particle.options.orbit;\n        let start;\n        let end;\n        if (type === Enums_1.OrbitType.back) {\n            start = Math.PI / 2;\n            end = (Math.PI * 3) / 2;\n        }\n        else if (type === Enums_1.OrbitType.front) {\n            start = (Math.PI * 3) / 2;\n            end = Math.PI / 2;\n        }\n        else {\n            start = 0;\n            end = 2 * Math.PI;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d;\n            Utils_1.drawEllipse(ctx, particle, (_a = particle.orbitColor) !== null && _a !== void 0 ? _a : particle.getFillColor(), (_c = (_b = particle.orbitRadius) !== null && _b !== void 0 ? _b : container.retina.orbitRadius) !== null && _c !== void 0 ? _c : particle.getRadius(), orbitOptions.opacity, orbitOptions.width, ((_d = particle.orbitRotation) !== null && _d !== void 0 ? _d : 0) * container.retina.pixelRatio, start, end);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            Utils_1.drawPlugin(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            Utils_1.drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = Utils_1.colorToRgb(background.color);\n            elementStyle.backgroundColor = color ? Utils_1.getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n    initCover() {\n        const options = this.container.actualOptions;\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const coverRgb = Utils_1.colorToRgb(color);\n        if (coverRgb) {\n            this.coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        const fillColor = Utils_1.colorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor;\n        let sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = Utils_1.colorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = Utils_1.colorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = Utils_1.deepExtend({}, element.style);\n            element.style.position = \"fixed\";\n            element.style.zIndex = options.fullScreen.zIndex.toString(10);\n            element.style.top = \"0\";\n            element.style.left = \"0\";\n            element.style.width = \"100%\";\n            element.style.height = \"100%\";\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            Utils_1.paintBase(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.draw((ctx) => {\n            const options = this.container.actualOptions;\n            const connectOptions = options.interactivity.modes.connect;\n            return Utils_1.gradient(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n}\nexports.Canvas = Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}