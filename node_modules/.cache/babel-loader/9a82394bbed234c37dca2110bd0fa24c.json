{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plugins = void 0;\nvar plugins = [];\nvar interactorsInitializers = new Map();\nvar updatersInitializers = new Map();\nvar interactors = new Map();\nvar updaters = new Map();\nvar presets = new Map();\nvar drawers = new Map();\nvar pathGenerators = new Map();\nvar Plugins = /*#__PURE__*/function () {\n  function Plugins() {\n    _classCallCheck(this, Plugins);\n  }\n  _createClass(Plugins, null, [{\n    key: \"getPlugin\",\n    value: function getPlugin(plugin) {\n      return plugins.find(function (t) {\n        return t.id === plugin;\n      });\n    }\n  }, {\n    key: \"addPlugin\",\n    value: function addPlugin(plugin) {\n      if (!Plugins.getPlugin(plugin.id)) {\n        plugins.push(plugin);\n      }\n    }\n  }, {\n    key: \"getAvailablePlugins\",\n    value: function getAvailablePlugins(container) {\n      var res = new Map();\n      var _iterator = _createForOfIteratorHelper(plugins),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var plugin = _step.value;\n          if (!plugin.needsPlugin(container.actualOptions)) {\n            continue;\n          }\n          res.set(plugin.id, plugin.getPlugin(container));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return res;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, sourceOptions) {\n      var _iterator2 = _createForOfIteratorHelper(plugins),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var plugin = _step2.value;\n          plugin.loadOptions(options, sourceOptions);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"getPreset\",\n    value: function getPreset(preset) {\n      return presets.get(preset);\n    }\n  }, {\n    key: \"addPreset\",\n    value: function addPreset(presetKey, options) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (override || !Plugins.getPreset(presetKey)) {\n        presets.set(presetKey, options);\n      }\n    }\n  }, {\n    key: \"addShapeDrawer\",\n    value: function addShapeDrawer(type, drawer) {\n      if (!Plugins.getShapeDrawer(type)) {\n        drawers.set(type, drawer);\n      }\n    }\n  }, {\n    key: \"getShapeDrawer\",\n    value: function getShapeDrawer(type) {\n      return drawers.get(type);\n    }\n  }, {\n    key: \"getSupportedShapes\",\n    value: function getSupportedShapes() {\n      return drawers.keys();\n    }\n  }, {\n    key: \"getPathGenerator\",\n    value: function getPathGenerator(type) {\n      return pathGenerators.get(type);\n    }\n  }, {\n    key: \"addPathGenerator\",\n    value: function addPathGenerator(type, pathGenerator) {\n      if (!Plugins.getPathGenerator(type)) {\n        pathGenerators.set(type, pathGenerator);\n      }\n    }\n  }, {\n    key: \"getInteractors\",\n    value: function getInteractors(container) {\n      var res = interactors.get(container);\n      if (!res) {\n        res = _toConsumableArray(interactorsInitializers.values()).map(function (t) {\n          return t(container);\n        });\n        interactors.set(container, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"addInteractor\",\n    value: function addInteractor(name, initInteractor) {\n      interactorsInitializers.set(name, initInteractor);\n    }\n  }, {\n    key: \"getUpdaters\",\n    value: function getUpdaters(container) {\n      var res = updaters.get(container);\n      if (!res) {\n        res = _toConsumableArray(updatersInitializers.values()).map(function (t) {\n          return t(container);\n        });\n        updaters.set(container, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"addParticleUpdater\",\n    value: function addParticleUpdater(name, initUpdater) {\n      updatersInitializers.set(name, initUpdater);\n    }\n  }]);\n  return Plugins;\n}();\nexports.Plugins = Plugins;","map":{"version":3,"names":["Object","defineProperty","exports","value","Plugins","plugins","interactorsInitializers","Map","updatersInitializers","interactors","updaters","presets","drawers","pathGenerators","plugin","find","t","id","getPlugin","push","container","res","needsPlugin","actualOptions","set","options","sourceOptions","loadOptions","preset","get","presetKey","override","getPreset","type","drawer","getShapeDrawer","keys","pathGenerator","getPathGenerator","values","map","name","initInteractor","initUpdater"],"sources":["C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/tsparticles/Utils/Plugins.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugins = void 0;\nconst plugins = [];\nconst interactorsInitializers = new Map();\nconst updatersInitializers = new Map();\nconst interactors = new Map();\nconst updaters = new Map();\nconst presets = new Map();\nconst drawers = new Map();\nconst pathGenerators = new Map();\nclass Plugins {\n    static getPlugin(plugin) {\n        return plugins.find((t) => t.id === plugin);\n    }\n    static addPlugin(plugin) {\n        if (!Plugins.getPlugin(plugin.id)) {\n            plugins.push(plugin);\n        }\n    }\n    static getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    static loadOptions(options, sourceOptions) {\n        for (const plugin of plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    static getPreset(preset) {\n        return presets.get(preset);\n    }\n    static addPreset(presetKey, options, override = false) {\n        if (override || !Plugins.getPreset(presetKey)) {\n            presets.set(presetKey, options);\n        }\n    }\n    static addShapeDrawer(type, drawer) {\n        if (!Plugins.getShapeDrawer(type)) {\n            drawers.set(type, drawer);\n        }\n    }\n    static getShapeDrawer(type) {\n        return drawers.get(type);\n    }\n    static getSupportedShapes() {\n        return drawers.keys();\n    }\n    static getPathGenerator(type) {\n        return pathGenerators.get(type);\n    }\n    static addPathGenerator(type, pathGenerator) {\n        if (!Plugins.getPathGenerator(type)) {\n            pathGenerators.set(type, pathGenerator);\n        }\n    }\n    static getInteractors(container) {\n        let res = interactors.get(container);\n        if (!res) {\n            res = [...interactorsInitializers.values()].map((t) => t(container));\n            interactors.set(container, res);\n        }\n        return res;\n    }\n    static addInteractor(name, initInteractor) {\n        interactorsInitializers.set(name, initInteractor);\n    }\n    static getUpdaters(container) {\n        let res = updaters.get(container);\n        if (!res) {\n            res = [...updatersInitializers.values()].map((t) => t(container));\n            updaters.set(container, res);\n        }\n        return res;\n    }\n    static addParticleUpdater(name, initUpdater) {\n        updatersInitializers.set(name, initUpdater);\n    }\n}\nexports.Plugins = Plugins;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}