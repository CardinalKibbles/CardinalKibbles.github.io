{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connector = void 0;\nvar Utils_1 = require(\"../../../Utils\");\nvar Enums_1 = require(\"../../../Enums\");\nvar ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\nvar Connector = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Connector, _ExternalInteractorBa);\n  var _super = _createSuper(Connector);\n  function Connector(container) {\n    _classCallCheck(this, Connector);\n    return _super.call(this, container);\n  }\n  _createClass(Connector, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n        mouse = container.interactivity.mouse,\n        events = container.actualOptions.interactivity.events;\n      if (!(events.onHover.enable && mouse.position)) {\n        return false;\n      }\n      return Utils_1.isInArray(Enums_1.HoverMode.connect, events.onHover.mode);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var container = this.container,\n        options = container.actualOptions;\n      if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n        var mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n          return;\n        }\n        var distance = Math.abs(container.retina.connectModeRadius),\n          query = container.particles.quadTree.queryCircle(mousePos, distance);\n        var i = 0;\n        var _iterator = _createForOfIteratorHelper(query),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var p1 = _step.value;\n            var pos1 = p1.getPosition();\n            var _iterator2 = _createForOfIteratorHelper(query.slice(i + 1)),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var p2 = _step2.value;\n                var pos2 = p2.getPosition(),\n                  distMax = Math.abs(container.retina.connectModeDistance),\n                  xDiff = Math.abs(pos1.x - pos2.x),\n                  yDiff = Math.abs(pos1.y - pos2.y);\n                if (xDiff < distMax && yDiff < distMax) {\n                  container.canvas.drawConnectLine(p1, p2);\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            ++i;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  }]);\n  return Connector;\n}(ExternalInteractorBase_1.ExternalInteractorBase);\nexports.Connector = Connector;","map":{"version":3,"names":["Object","defineProperty","exports","value","Connector","Utils_1","require","Enums_1","ExternalInteractorBase_1","container","mouse","interactivity","events","actualOptions","onHover","enable","position","isInArray","HoverMode","connect","mode","options","status","mousePos","distance","Math","abs","retina","connectModeRadius","query","particles","quadTree","queryCircle","i","p1","pos1","getPosition","slice","p2","pos2","distMax","connectModeDistance","xDiff","x","yDiff","y","canvas","drawConnectLine","ExternalInteractorBase"],"sources":["C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/tsparticles/Interactions/External/Connect/Connector.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connector = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nconst Enums_1 = require(\"../../../Enums\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\nclass Connector extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, mouse = container.interactivity.mouse, events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return Utils_1.isInArray(Enums_1.HoverMode.connect, events.onHover.mode);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance);\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        container.canvas.drawConnectLine(p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n}\nexports.Connector = Connector;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}