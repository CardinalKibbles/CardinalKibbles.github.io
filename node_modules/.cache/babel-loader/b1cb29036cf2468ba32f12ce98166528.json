{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SizeUpdater = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction checkDestroy(particle, destroy, value, minValue, maxValue) {\n  switch (destroy) {\n    case Enums_1.DestroyType.max:\n      if (value >= maxValue) {\n        particle.destroy();\n      }\n      break;\n    case Enums_1.DestroyType.min:\n      if (value <= minValue) {\n        particle.destroy();\n      }\n      break;\n  }\n}\nfunction updateSize(particle, delta) {\n  var _a;\n  const sizeOpt = particle.options.size;\n  const sizeAnim = sizeOpt.animation;\n  const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  const minValue = particle.size.min;\n  const maxValue = particle.size.max;\n  if (!(!particle.destroyed && sizeAnim.enable && (sizeAnim.count <= 0 || particle.loops.size < sizeAnim.count))) {\n    return;\n  }\n  switch (particle.size.status) {\n    case Enums_1.AnimationStatus.increasing:\n      if (particle.size.value >= maxValue) {\n        particle.size.status = Enums_1.AnimationStatus.decreasing;\n        particle.loops.size++;\n      } else {\n        particle.size.value += sizeVelocity;\n      }\n      break;\n    case Enums_1.AnimationStatus.decreasing:\n      if (particle.size.value <= minValue) {\n        particle.size.status = Enums_1.AnimationStatus.increasing;\n        particle.loops.size++;\n      } else {\n        particle.size.value -= sizeVelocity;\n      }\n  }\n  checkDestroy(particle, sizeAnim.destroy, particle.size.value, minValue, maxValue);\n  if (!particle.destroyed) {\n    particle.size.value = Utils_1.clamp(particle.size.value, minValue, maxValue);\n  }\n}\nclass SizeUpdater {\n  isEnabled(particle) {\n    const sizeOpt = particle.options.size;\n    const sizeAnim = sizeOpt.animation;\n    return !particle.destroyed && !particle.spawning && sizeAnim.enable && (sizeAnim.count <= 0 || particle.loops.size < sizeAnim.count);\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateSize(particle, delta);\n  }\n}\nexports.SizeUpdater = SizeUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","SizeUpdater","Enums_1","require","Utils_1","checkDestroy","particle","destroy","minValue","maxValue","DestroyType","max","min","updateSize","delta","_a","sizeOpt","options","size","sizeAnim","animation","sizeVelocity","velocity","factor","destroyed","enable","count","loops","status","AnimationStatus","increasing","decreasing","clamp","isEnabled","spawning","update"],"sources":["C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/tsparticles/Updaters/Size/SizeUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SizeUpdater = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction checkDestroy(particle, destroy, value, minValue, maxValue) {\n    switch (destroy) {\n        case Enums_1.DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case Enums_1.DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a;\n    const sizeOpt = particle.options.size;\n    const sizeAnim = sizeOpt.animation;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const minValue = particle.size.min;\n    const maxValue = particle.size.max;\n    if (!(!particle.destroyed && sizeAnim.enable && (sizeAnim.count <= 0 || particle.loops.size < sizeAnim.count))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case Enums_1.AnimationStatus.increasing:\n            if (particle.size.value >= maxValue) {\n                particle.size.status = Enums_1.AnimationStatus.decreasing;\n                particle.loops.size++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case Enums_1.AnimationStatus.decreasing:\n            if (particle.size.value <= minValue) {\n                particle.size.status = Enums_1.AnimationStatus.increasing;\n                particle.loops.size++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    checkDestroy(particle, sizeAnim.destroy, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = Utils_1.clamp(particle.size.value, minValue, maxValue);\n    }\n}\nclass SizeUpdater {\n    isEnabled(particle) {\n        const sizeOpt = particle.options.size;\n        const sizeAnim = sizeOpt.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            sizeAnim.enable &&\n            (sizeAnim.count <= 0 || particle.loops.size < sizeAnim.count));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\nexports.SizeUpdater = SizeUpdater;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}