{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CircleWarp = void 0;\nvar Rectangle_1 = require(\"./Rectangle\");\nvar Circle_1 = require(\"./Circle\");\nvar CircleWarp = /*#__PURE__*/function (_Circle_1$Circle) {\n  _inherits(CircleWarp, _Circle_1$Circle);\n  var _super = _createSuper(CircleWarp);\n  function CircleWarp(x, y, radius, canvasSize) {\n    var _this;\n    _classCallCheck(this, CircleWarp);\n    _this = _super.call(this, x, y, radius);\n    _this.canvasSize = canvasSize;\n    _this.canvasSize = {\n      height: canvasSize.height,\n      width: canvasSize.width\n    };\n    return _this;\n  }\n  _createClass(CircleWarp, [{\n    key: \"contains\",\n    value: function contains(point) {\n      if (_get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, point)) {\n        return true;\n      }\n      var posNE = {\n        x: point.x - this.canvasSize.width,\n        y: point.y\n      };\n      if (_get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, posNE)) {\n        return true;\n      }\n      var posSE = {\n        x: point.x - this.canvasSize.width,\n        y: point.y - this.canvasSize.height\n      };\n      if (_get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, posSE)) {\n        return true;\n      }\n      var posSW = {\n        x: point.x,\n        y: point.y - this.canvasSize.height\n      };\n      return _get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, posSW);\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(range) {\n      if (_get(_getPrototypeOf(CircleWarp.prototype), \"intersects\", this).call(this, range)) {\n        return true;\n      }\n      var rect = range;\n      var circle = range;\n      var newPos = {\n        x: range.position.x - this.canvasSize.width,\n        y: range.position.y - this.canvasSize.height\n      };\n      if (circle.radius !== undefined) {\n        var biggerCircle = new Circle_1.Circle(newPos.x, newPos.y, circle.radius * 2);\n        return _get(_getPrototypeOf(CircleWarp.prototype), \"intersects\", this).call(this, biggerCircle);\n      } else if (rect.size !== undefined) {\n        var rectSW = new Rectangle_1.Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n        return _get(_getPrototypeOf(CircleWarp.prototype), \"intersects\", this).call(this, rectSW);\n      }\n      return false;\n    }\n  }]);\n  return CircleWarp;\n}(Circle_1.Circle);\nexports.CircleWarp = CircleWarp;","map":{"version":3,"names":["Object","defineProperty","exports","value","CircleWarp","Rectangle_1","require","Circle_1","x","y","radius","canvasSize","height","width","point","posNE","posSE","posSW","range","rect","circle","newPos","position","undefined","biggerCircle","Circle","size","rectSW","Rectangle"],"sources":["C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/tsparticles/Utils/CircleWarp.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CircleWarp = void 0;\nconst Rectangle_1 = require(\"./Rectangle\");\nconst Circle_1 = require(\"./Circle\");\nclass CircleWarp extends Circle_1.Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = {\n            height: canvasSize.height,\n            width: canvasSize.width,\n        };\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range;\n        const circle = range;\n        const newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle_1.Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle_1.Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\nexports.CircleWarp = CircleWarp;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAMC,WAAW,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC1C,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAAC,IAC/BF,UAAU;EAAA;EAAA;EACZ,oBAAYI,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAEC,UAAU,EAAE;IAAA;IAAA;IAClC,0BAAMH,CAAC,EAAEC,CAAC,EAAEC,MAAM;IAClB,MAAKC,UAAU,GAAGA,UAAU;IAC5B,MAAKA,UAAU,GAAG;MACdC,MAAM,EAAED,UAAU,CAACC,MAAM;MACzBC,KAAK,EAAEF,UAAU,CAACE;IACtB,CAAC;IAAC;EACN;EAAC;IAAA;IAAA,OACD,kBAASC,KAAK,EAAE;MACZ,6EAAmBA,KAAK,GAAG;QACvB,OAAO,IAAI;MACf;MACA,IAAMC,KAAK,GAAG;QACVP,CAAC,EAAEM,KAAK,CAACN,CAAC,GAAG,IAAI,CAACG,UAAU,CAACE,KAAK;QAClCJ,CAAC,EAAEK,KAAK,CAACL;MACb,CAAC;MACD,6EAAmBM,KAAK,GAAG;QACvB,OAAO,IAAI;MACf;MACA,IAAMC,KAAK,GAAG;QACVR,CAAC,EAAEM,KAAK,CAACN,CAAC,GAAG,IAAI,CAACG,UAAU,CAACE,KAAK;QAClCJ,CAAC,EAAEK,KAAK,CAACL,CAAC,GAAG,IAAI,CAACE,UAAU,CAACC;MACjC,CAAC;MACD,6EAAmBI,KAAK,GAAG;QACvB,OAAO,IAAI;MACf;MACA,IAAMC,KAAK,GAAG;QACVT,CAAC,EAAEM,KAAK,CAACN,CAAC;QACVC,CAAC,EAAEK,KAAK,CAACL,CAAC,GAAG,IAAI,CAACE,UAAU,CAACC;MACjC,CAAC;MACD,gFAAsBK,KAAK;IAC/B;EAAC;IAAA;IAAA,OACD,oBAAWC,KAAK,EAAE;MACd,+EAAqBA,KAAK,GAAG;QACzB,OAAO,IAAI;MACf;MACA,IAAMC,IAAI,GAAGD,KAAK;MAClB,IAAME,MAAM,GAAGF,KAAK;MACpB,IAAMG,MAAM,GAAG;QACXb,CAAC,EAAEU,KAAK,CAACI,QAAQ,CAACd,CAAC,GAAG,IAAI,CAACG,UAAU,CAACE,KAAK;QAC3CJ,CAAC,EAAES,KAAK,CAACI,QAAQ,CAACb,CAAC,GAAG,IAAI,CAACE,UAAU,CAACC;MAC1C,CAAC;MACD,IAAIQ,MAAM,CAACV,MAAM,KAAKa,SAAS,EAAE;QAC7B,IAAMC,YAAY,GAAG,IAAIjB,QAAQ,CAACkB,MAAM,CAACJ,MAAM,CAACb,CAAC,EAAEa,MAAM,CAACZ,CAAC,EAAEW,MAAM,CAACV,MAAM,GAAG,CAAC,CAAC;QAC/E,kFAAwBc,YAAY;MACxC,CAAC,MACI,IAAIL,IAAI,CAACO,IAAI,KAAKH,SAAS,EAAE;QAC9B,IAAMI,MAAM,GAAG,IAAItB,WAAW,CAACuB,SAAS,CAACP,MAAM,CAACb,CAAC,EAAEa,MAAM,CAACZ,CAAC,EAAEU,IAAI,CAACO,IAAI,CAACb,KAAK,GAAG,CAAC,EAAEM,IAAI,CAACO,IAAI,CAACd,MAAM,GAAG,CAAC,CAAC;QACvG,kFAAwBe,MAAM;MAClC;MACA,OAAO,KAAK;IAChB;EAAC;EAAA;AAAA,EApDoBpB,QAAQ,CAACkB,MAAM;AAsDxCvB,OAAO,CAACE,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script"}