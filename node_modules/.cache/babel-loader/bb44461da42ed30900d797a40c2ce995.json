{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Collider = void 0;\nvar Enums_1 = require(\"../../../Enums\");\nvar Utils_1 = require(\"../../../Utils\");\nvar ParticlesInteractorBase_1 = require(\"../../../Core/ParticlesInteractorBase\");\nfunction bounce(p1, p2) {\n  Utils_1.circleBounce(Utils_1.circleBounceDataFromParticle(p1), Utils_1.circleBounceDataFromParticle(p2));\n}\nfunction destroy(p1, p2) {\n  if (!p1.unbreakable && !p2.unbreakable) {\n    bounce(p1, p2);\n  }\n  if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n    p1.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n    p2.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n    if (p1.getRadius() >= p2.getRadius()) {\n      p2.destroy();\n    } else {\n      p1.destroy();\n    }\n  }\n}\nvar Collider = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Collider, _ParticlesInteractorB);\n  var _super = _createSuper(Collider);\n  function Collider(container) {\n    _classCallCheck(this, Collider);\n    return _super.call(this, container);\n  }\n  _createClass(Collider, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.collisions.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact(p1) {\n      var container = this.container;\n      var pos1 = p1.getPosition();\n      var radius1 = p1.getRadius();\n      var query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n      var _iterator = _createForOfIteratorHelper(query),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var p2 = _step.value;\n          if (p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning) {\n            continue;\n          }\n          var pos2 = p2.getPosition();\n          if (Math.round(pos1.z) !== Math.round(pos2.z)) {\n            continue;\n          }\n          var dist = Utils_1.getDistance(pos1, pos2);\n          var radius2 = p2.getRadius();\n          var distP = radius1 + radius2;\n          if (dist <= distP) {\n            this.resolveCollision(p1, p2);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"resolveCollision\",\n    value: function resolveCollision(p1, p2) {\n      switch (p1.options.collisions.mode) {\n        case Enums_1.CollisionMode.absorb:\n          {\n            this.absorb(p1, p2);\n            break;\n          }\n        case Enums_1.CollisionMode.bounce:\n          {\n            bounce(p1, p2);\n            break;\n          }\n        case Enums_1.CollisionMode.destroy:\n          {\n            destroy(p1, p2);\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"absorb\",\n    value: function absorb(p1, p2) {\n      var container = this.container;\n      var fps = container.fpsLimit / 1000;\n      if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n      } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n      } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n          var factor = Utils_1.clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n          p1.size.value += factor;\n          p2.size.value -= factor;\n          if (p2.getRadius() <= container.retina.pixelRatio) {\n            p2.size.value = 0;\n            p2.destroy();\n          }\n        } else {\n          var _factor = Utils_1.clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n          p1.size.value -= _factor;\n          p2.size.value += _factor;\n          if (p1.getRadius() <= container.retina.pixelRatio) {\n            p1.size.value = 0;\n            p1.destroy();\n          }\n        }\n      }\n    }\n  }]);\n  return Collider;\n}(ParticlesInteractorBase_1.ParticlesInteractorBase);\nexports.Collider = Collider;","map":{"version":3,"names":["Object","defineProperty","exports","value","Collider","Enums_1","require","Utils_1","ParticlesInteractorBase_1","bounce","p1","p2","circleBounce","circleBounceDataFromParticle","destroy","unbreakable","getRadius","undefined","container","particle","options","collisions","enable","pos1","getPosition","radius1","query","particles","quadTree","queryCircle","mode","destroyed","spawning","pos2","Math","round","z","dist","getDistance","radius2","distP","resolveCollision","CollisionMode","absorb","fps","fpsLimit","factor","clamp","size","retina","pixelRatio","ParticlesInteractorBase"],"sources":["C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/tsparticles/Interactions/Particles/Collisions/Collider.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collider = void 0;\nconst Enums_1 = require(\"../../../Enums\");\nconst Utils_1 = require(\"../../../Utils\");\nconst ParticlesInteractorBase_1 = require(\"../../../Core/ParticlesInteractorBase\");\nfunction bounce(p1, p2) {\n    Utils_1.circleBounce(Utils_1.circleBounceDataFromParticle(p1), Utils_1.circleBounceDataFromParticle(p2));\n}\nfunction destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            p2.destroy();\n        }\n        else {\n            p1.destroy();\n        }\n    }\n}\nclass Collider extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const radius1 = p1.getRadius();\n        const query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (Math.round(pos1.z) !== Math.round(pos2.z)) {\n                continue;\n            }\n            const dist = Utils_1.getDistance(pos1, pos2);\n            const radius2 = p2.getRadius();\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.options.collisions.mode) {\n            case Enums_1.CollisionMode.absorb: {\n                this.absorb(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.bounce: {\n                bounce(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.destroy: {\n                destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.fpsLimit / 1000;\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                const factor = Utils_1.clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.getRadius() <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = Utils_1.clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.getRadius() <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\nexports.Collider = Collider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}