{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WobbleUpdater = void 0;\nfunction updateWobble(particle, delta) {\n  const wobble = particle.options.wobble;\n  const speed = particle.wobbleSpeed * delta.factor;\n  const distance = particle.wobbleDistance * delta.factor / (1000 / 60);\n  const max = 2 * Math.PI;\n  if (!wobble.enable) {\n    return;\n  }\n  particle.wobbleAngle += speed;\n  if (particle.wobbleAngle > max) {\n    particle.wobbleAngle -= max;\n  }\n  particle.position.x += distance * Math.cos(particle.wobbleAngle);\n  particle.position.y += distance * Math.abs(Math.sin(particle.wobbleAngle));\n}\nclass WobbleUpdater {\n  isEnabled(particle) {\n    const rotate = particle.options.rotate;\n    const rotateAnimation = rotate.animation;\n    return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateWobble(particle, delta);\n  }\n}\nexports.WobbleUpdater = WobbleUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","WobbleUpdater","updateWobble","particle","delta","wobble","options","speed","wobbleSpeed","factor","distance","wobbleDistance","max","Math","PI","enable","wobbleAngle","position","x","cos","y","abs","sin","isEnabled","rotate","rotateAnimation","animation","destroyed","spawning","path","update"],"sources":["C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/tsparticles/Updaters/Wobble/WobbleUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WobbleUpdater = void 0;\nfunction updateWobble(particle, delta) {\n    const wobble = particle.options.wobble;\n    const speed = particle.wobbleSpeed * delta.factor;\n    const distance = (particle.wobbleDistance * delta.factor) / (1000 / 60);\n    const max = 2 * Math.PI;\n    if (!wobble.enable) {\n        return;\n    }\n    particle.wobbleAngle += speed;\n    if (particle.wobbleAngle > max) {\n        particle.wobbleAngle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobbleAngle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobbleAngle));\n}\nclass WobbleUpdater {\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        const rotateAnimation = rotate.animation;\n        return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\nexports.WobbleUpdater = WobbleUpdater;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAG,KAAK,CAAC;AAC9B,SAASC,YAAY,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACnC,MAAMC,MAAM,GAAGF,QAAQ,CAACG,OAAO,CAACD,MAAM;EACtC,MAAME,KAAK,GAAGJ,QAAQ,CAACK,WAAW,GAAGJ,KAAK,CAACK,MAAM;EACjD,MAAMC,QAAQ,GAAIP,QAAQ,CAACQ,cAAc,GAAGP,KAAK,CAACK,MAAM,IAAK,IAAI,GAAG,EAAE,CAAC;EACvE,MAAMG,GAAG,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE;EACvB,IAAI,CAACT,MAAM,CAACU,MAAM,EAAE;IAChB;EACJ;EACAZ,QAAQ,CAACa,WAAW,IAAIT,KAAK;EAC7B,IAAIJ,QAAQ,CAACa,WAAW,GAAGJ,GAAG,EAAE;IAC5BT,QAAQ,CAACa,WAAW,IAAIJ,GAAG;EAC/B;EACAT,QAAQ,CAACc,QAAQ,CAACC,CAAC,IAAIR,QAAQ,GAAGG,IAAI,CAACM,GAAG,CAAChB,QAAQ,CAACa,WAAW,CAAC;EAChEb,QAAQ,CAACc,QAAQ,CAACG,CAAC,IAAIV,QAAQ,GAAGG,IAAI,CAACQ,GAAG,CAACR,IAAI,CAACS,GAAG,CAACnB,QAAQ,CAACa,WAAW,CAAC,CAAC;AAC9E;AACA,MAAMf,aAAa,CAAC;EAChBsB,SAAS,CAACpB,QAAQ,EAAE;IAChB,MAAMqB,MAAM,GAAGrB,QAAQ,CAACG,OAAO,CAACkB,MAAM;IACtC,MAAMC,eAAe,GAAGD,MAAM,CAACE,SAAS;IACxC,OAAO,CAACvB,QAAQ,CAACwB,SAAS,IAAI,CAACxB,QAAQ,CAACyB,QAAQ,IAAI,CAACJ,MAAM,CAACK,IAAI,IAAIJ,eAAe,CAACV,MAAM;EAC9F;EACAe,MAAM,CAAC3B,QAAQ,EAAEC,KAAK,EAAE;IACpB,IAAI,CAAC,IAAI,CAACmB,SAAS,CAACpB,QAAQ,CAAC,EAAE;MAC3B;IACJ;IACAD,YAAY,CAACC,QAAQ,EAAEC,KAAK,CAAC;EACjC;AACJ;AACAL,OAAO,CAACE,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script"}