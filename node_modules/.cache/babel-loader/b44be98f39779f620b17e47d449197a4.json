{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceColorSvg = exports.downloadSvgImage = exports.loadImage = void 0;\nconst Utils_1 = require(\"../../Utils\");\nfunction loadImage(source) {\n  return new Promise((resolve, reject) => {\n    if (!source) {\n      reject(\"Error tsParticles - No image.src\");\n      return;\n    }\n    const image = {\n      source: source,\n      type: source.substr(source.length - 3)\n    };\n    const img = new Image();\n    img.addEventListener(\"load\", () => {\n      image.element = img;\n      resolve(image);\n    });\n    img.addEventListener(\"error\", () => {\n      reject(`Error tsParticles - loading image: ${source}`);\n    });\n    img.src = source;\n  });\n}\nexports.loadImage = loadImage;\nfunction downloadSvgImage(source) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!source) {\n      throw new Error(\"Error tsParticles - No image.src\");\n    }\n    const image = {\n      source: source,\n      type: source.substr(source.length - 3)\n    };\n    if (image.type !== \"svg\") {\n      return loadImage(source);\n    }\n    const response = yield fetch(image.source);\n    if (!response.ok) {\n      throw new Error(\"Error tsParticles - Image not found\");\n    }\n    image.svgData = yield response.text();\n    return image;\n  });\n}\nexports.downloadSvgImage = downloadSvgImage;\nfunction replaceColorSvg(imageShape, color, opacity) {\n  const {\n    svgData\n  } = imageShape;\n  if (!svgData) {\n    return \"\";\n  }\n  if (svgData.includes(\"fill\")) {\n    const currentColor = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n    return svgData.replace(currentColor, () => Utils_1.getStyleFromHsl(color, opacity));\n  }\n  const preFillIndex = svgData.indexOf(\">\");\n  return `${svgData.substring(0, preFillIndex)} fill=\"${Utils_1.getStyleFromHsl(color, opacity)}\"${svgData.substring(preFillIndex)}`;\n}\nexports.replaceColorSvg = replaceColorSvg;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","replaceColorSvg","downloadSvgImage","loadImage","Utils_1","require","source","image","type","substr","length","img","Image","addEventListener","element","src","Error","response","fetch","ok","svgData","text","imageShape","color","opacity","includes","currentColor","replace","getStyleFromHsl","preFillIndex","indexOf","substring"],"sources":["C:/Users/Tyler Giles/Documents/GitHub/Personal_Site/node_modules/tsparticles/Shapes/Image/Utils.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceColorSvg = exports.downloadSvgImage = exports.loadImage = void 0;\nconst Utils_1 = require(\"../../Utils\");\nfunction loadImage(source) {\n    return new Promise((resolve, reject) => {\n        if (!source) {\n            reject(\"Error tsParticles - No image.src\");\n            return;\n        }\n        const image = {\n            source: source,\n            type: source.substr(source.length - 3),\n        };\n        const img = new Image();\n        img.addEventListener(\"load\", () => {\n            image.element = img;\n            resolve(image);\n        });\n        img.addEventListener(\"error\", () => {\n            reject(`Error tsParticles - loading image: ${source}`);\n        });\n        img.src = source;\n    });\n}\nexports.loadImage = loadImage;\nfunction downloadSvgImage(source) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        const image = {\n            source: source,\n            type: source.substr(source.length - 3),\n        };\n        if (image.type !== \"svg\") {\n            return loadImage(source);\n        }\n        const response = yield fetch(image.source);\n        if (!response.ok) {\n            throw new Error(\"Error tsParticles - Image not found\");\n        }\n        image.svgData = yield response.text();\n        return image;\n    });\n}\nexports.downloadSvgImage = downloadSvgImage;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    if (svgData.includes(\"fill\")) {\n        const currentColor = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\n        return svgData.replace(currentColor, () => Utils_1.getStyleFromHsl(color, opacity));\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${Utils_1.getStyleFromHsl(color, opacity)}\"${svgData.substring(preFillIndex)}`;\n}\nexports.replaceColorSvg = replaceColorSvg;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}